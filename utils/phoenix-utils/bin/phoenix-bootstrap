#!/bin/bash

set -e

WORKDIR=$PWD
ME=$(basename $0)
MYDIR=$(dirname $0)
MYDIR=$(cd $MYDIR/.. && pwd)

CBUILD_CONF=$WORKDIR/cbuild.conf

##CPKG_DIRS##
# CPKG BOOTSTRAP BEGIN
if [ -z "$LIBDIR" ]; then
    export BINDIR=$MYDIR/bin
    export ETCDIR=$MYDIR/etc
    export LIBDIR=$MYDIR/lib
    export SHAREDIR=$MYDIR/share
    export VARDIR=$MYDIR/var
    export LOGDIR=$MYDIR/log
fi
# CPKG BOOTSTRAP END

if [[ -f $CBUILD_CONF ]]; then
    . $CBUILD_CONF
    [[ -z "$PKG_VER" ]] && PKG_VER=1.0
    (($PKG_REV)) || PKG_REV=1
    
    [[ -z "$PRJ_NAME" ]] && (echo "PRJ_NAME not set" && exit 1)
    [[ -z "$PRJ_SERVER" ]] && PRJ_SERVER=$PRJ_NAME
fi
PKG_NAME=${PRJ_NAME//_/-}

. $(cpkg-config -L)

subs() {
    local VAR=$1
    local VALUE=$2
    local FILE=$3

    sed -e "s/##${VAR}##/${VALUE}/g" $FILE
}

ph_error() {
    echo "E: $@"
    exit 1
}

ph_message() {
    echo "M: $@"
}

docker_remove_if_exists() {
    local NAME=$1
    local CID=$(docker ps -a -q -f name=$NAME)
    
    if [ -n "$CID" ]; then
        ph_message "Remove existing image $NAME (container ID: $CID)"
        docker stop $NAME
        docker rm $NAME
        docker rmi $NAME
    fi
}

##################################################
#
# Main
#
##################################################

# Name
PROJECT=$PRJ_NAME
PROJECT_DEV=${PROJECT}-dev
PROJECT_DIR=$WORKDIR
PROJECT_BUILD=/tmp/$PROJECT
[ -d $PROJECT_BUILD ] && rm -rf $PROJECT_BUILD
mkdir -p $PROJECT_DIR $PROJECT_BUILD

# Check if docker exists
docker_remove_if_exists $PROJECT_DEV

# Generate docker builder for project
subs "USER_ID" $UID  $SHAREDIR/support/builder-dev/Dockerfile > $PROJECT_BUILD/Dockerfile
docker build -t $PROJECT_DEV $PROJECT_BUILD
docker run -t -d --name=$PROJECT_DEV --net=host -v $PWD:/src $PROJECT_DEV

# Generate Docker file
cat <<EOF > $PROJECT_DIR/Dockerfile.onbuild
FROM ddway2/phoenix-onbuild

CMD ["/usr/bin/${PRJ_SERVER}"]
EOF

cat <<EOF > $PROJECT_DIR/Dockerfile.dev
FROM ddway2/phoenix-dev

CMD ["bash"]
EOF

# Generate project structure
INCLUDE_DIR=$PROJECT_DIR/sources/include/${PROJECT}
BINARIES_DIR=$PROJECT_DIR/sources/binaries/${PRJ_SERVER}
mkdir -p $INCLUDE_DIR $BINARIES_DIR

cd $PROJECT_DIR
if [ ! -d .git ]; then
    git init
    echo "**/CMakeList.txt" > .gitignore
    echo "**/browse.VC.db" >> .gitignore
fi

##############################################################################
#
# POD Documentation
#
##############################################################################
: <<=cut
=pod

=head1 NAME

phoenix-bootstrap - C/C++ automated project bootstrap configurator

=head1 DESCRIPTION

phoenix-bootstrap is very nice.

=head1 SYNOPSIS

  phoenix-bootstrap

=cut

