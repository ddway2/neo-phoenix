#!/bin/bash

set -e

WORKDIR=$PWD
ME=$(basename $0)
MYDIR=$(dirname $0)
MYDIR=$(cd $MYDIR/.. && pwd)

##CPKG_DIRS##
# CPKG BOOTSTRAP BEGIN
if [ -z "$LIBDIR" ]; then
    export BINDIR=$MYDIR/bin
    export ETCDIR=$MYDIR/etc
    export LIBDIR=$MYDIR/lib
    export SHAREDIR=$MYDIR/share
    export VARDIR=$MYDIR/var
    export LOGDIR=$MYDIR/log
fi
# CPKG BOOTSTRAP END

. $(cpkg-config -L)

##################################################
#
# Main
#
##################################################

OPTSPECS[s]="BT_SERVER_NAME:server:app server name:"
OPTSPECS[n]="BT_MODULE_NAME::module name:$REQUIRED"

cp_get_options "$@"
cp_check_conf

# Name
PROJECT=$BT_MODULE_NAME

PROJECT_DIR=$WORKDIR/$PROJECT
mkdir -p $PROJECT_DIR

# Generate Docker file
cat <<EOF > $PROJECT_DIR/Dockerfile.onbuild
FROM ddway2/phoenix-onbuild

CMD ["/usr/bin/${BT_SERVER_NAME}"]
EOF

cat <<EOF > $PROJECT_DIR/Dockerfile.dev
FROM ddway2/phoenix-dev

CMD ["bash"]
EOF

# Generate project structure
INCLUDE_DIR=$PROJECT_DIR/app/sources/include/${$PROJECT}
BINARIES_DIR=$PROJECT_DIR/app/sources/binaries/${PROJECT}
mkdir -p $INCLUDE_DIR $BINARIES_DIR
cat <<EOF > $PROJECT_DIR/app/cbuild.conf
PKG_CATS=(
    [deb]=devel
    [pkgsrc]=devel
)
PKG_VER=1.0
PKG_REV=1
PKG_SHORTDESC="$PROJECT app"
PKG_LONGDESC="
packaging for $PROJECT app
"

# cbuild settings
PRJ_NAME=$PROJECT
PRJ_OPTS["std"]=c++14
EOF

cd $PROJECT_DIR
git init
echo "**/CMakeList.txt" > .gitignore

rsync -avP -q $SHAREDIR/templates/app/sources/binaries/ $BINARIES_DIR

##############################################################################
#
# POD Documentation
#
##############################################################################
: <<=cut
=pod

=head1 NAME

phoenix-bootstrap - C/C++ automated project bootstrap configurator

=head1 DESCRIPTION

phoenix-bootstrap is very nice.

=head1 SYNOPSIS

  phoenix-bootstrap

=cut

