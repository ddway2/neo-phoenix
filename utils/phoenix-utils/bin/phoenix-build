#!/bin/bash

set -e

WORKDIR=$PWD
ME=$(basename $0)
MYDIR=$(dirname $0)
MYDIR=$(cd $MYDIR && pwd)

CBUILD_CONF=$WORKDIR/cbuild.conf

##CPKG_DIRS##
# CPKG BOOTSTRAP BEGIN
if [ -z "$LIBDIR" ]; then
    export BINDIR=$MYDIR/bin
    export ETCDIR=$MYDIR/etc
    export LIBDIR=$MYDIR/lib
    export SHAREDIR=$MYDIR/share
    export VARDIR=$MYDIR/var
    export LOGDIR=$MYDIR/log
fi
# CPKG BOOTSTRAP END

function ph_error() {
  echo "E: $@"
  exit 1
}

if [[ -f $CBUILD_CONF ]]; then
    . $CBUILD_CONF
    [[ -z "$PKG_VER" ]] && PKG_VER=1.0
    (($PKG_REV)) || PKG_REV=1
    
    [[ -z "$PRJ_NAME" ]] && (echo "PRJ_NAME not set" && exit 1)
    [[ -z "$PRJ_SERVER" ]] && PRJ_SERVER=$PRJ_NAME
else
    ph_error "cbuild.conf require - do you use phoenix-bootstrap ?"
fi
PKG_NAME=${PRJ_NAME//_/-}

. $(cpkg-config -L)

PROJECT=$PRJ_NAME
PROJECT_DEV=${PROJECT}-dev
PROJECT_DIR=$WORKDIR
PROJECT_DEBS=$PROJECT_DIR/DEBS

function call_in_docker() {
    docker exec -it $PROJECT_DEV bash -c "$@"
}

function install_debs {
    if [ -d $PROJECT_DEBS ]; then
		call_in_docker "sudo dpkg -i DEBS/*.deb || true && sudo apt-get -f -y install"
    fi
}

function ph_configure() {
	install_debs
    call_in_docker "cbuild -C -y -j $(nproc)"
}

function ph_build() {
    call_in_docker "make"
}

function ph_install() {
    call_in_docker "sudo make install"
}

function ph_package() {
    call_in_docker "make package"
}

function ph_run() {
    call_in_docker "/usr/bin/$PRJ_SERVER"
}

function ph_docker_image() {
    [[ ! -f "Dockerfile.onbuild" ]] && ph_error "Dockerfile.onbuild not found in current directory"
    docker build -f Dockerfile.onbuild -t $PROJECT .
}

function ph_docker_run() {
    docker run -it --rm --net=host $PROJECT
}

function usage() {
    cat <<EOF
phoenix-build usage:
  phoenix-build <action>
  
actions:

configure     - configure project (new files/new depends)
build         - build current project
package       - build and package current project
install       - install project in dev container docker
run           - run installed project
image         - build docker image
test          - test generated docker image
EOF
}

##################################################
#
# Main
#
##################################################
ACTION=$1



case $ACTION in
configure)
    ph_configure
;;
build)
    ph_build
;;
package)
    ph_build
    ph_package
;;
install)
    ph_build
    ph_install
;;
run)
    ph_run
;;
image)
    ph_docker_image
;;
test)
    ph_docker_run
;;
help)
    usage
;;
*)
    usage
    ph_error "Unknown Action"
;;
esac

##############################################################################
#
# POD Documentation
#
##############################################################################
: <<=cut
=pod

=head1 NAME

phoenix-build - C/C++ automated project builder

=head1 DESCRIPTION

phoenix-build is very nice.

=head1 SYNOPSIS

  phoenix-build

=cut
